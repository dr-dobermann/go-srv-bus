syntax = "proto3";

option go_package = "/ms_proto";

package ms_proto;

/*
  generator string on ms-windows (run from srvbus root)

  D:\dev-tools\protoc\bin\protoc --go_out=.\proto\gen\ --go-grpc_out=.\proto\gen\ .\proto\ms.proto
*/

// =============================================================================
// Message Server api
service Messenger {
    // sends a single message or a bunch of them to a server.
    // if there is no error, the rpc returns the number of messages sent to
    // the queue
    rpc SendMessages( SendMsgRequest ) returns ( SendMsgResponse ) {}

    // gets a stream of messages from the server.
    // returned stream could be empty if there is no messages in the queue
    // or there is no _new_ messages for the particular receiverID.
    // if you need to read all messages in the queue, just 
    // set fromBegin to true.
    rpc GetMessages( MessagesRequest ) returns ( MessagesResponse ) {}

    // checks if there is particular queue on the MessageServer.
    rpc HasQueue( QueueCheck ) returns ( QueueCheckResponse ) {}
}

message SendMsgRequest {
    string server_id         = 1;
    string queue            = 2;
    string sender_id        = 3;

    repeated Message msgs   = 4;
}

message SendMsgResponse {
    string server_id              = 1;
    repeated int32 sent_msg_pos   = 2;
    repeated string sent_msg_id   = 3;
}

message MessagesRequest {
    string server_id        = 1;
    string receiver_id      = 2;
    string queue            = 3;
    bool from_begin         = 4;
}

message MessagesResponse {
    string server_id                  = 1;
    repeated MessageEnvelope messages = 2; 
}

message MessageEnvelope {
    string server_id        = 1;
    string queue            = 2;
    string msg_id           = 3;
    string at               = 4;
    string sender_id        = 5;

    Message msg             = 6;
}

message Message {
    string name             = 4;
    string data             = 5;
}

message QueueCheck {
    string server_id        = 1;
    string name             = 2;
}

message QueueCheckResponse {
    string server_id        = 1;
    bool state              = 2;
}